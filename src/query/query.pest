// See the pest editor https://pest.rs/#editor for an easy way to see how
// inputs are parsed by this grammar

query         =  { SOI ~ expr ~ EOI }
expr = _{ singleVariableFunc | noVariableFunc | infixExpression }

noVariableFunc     =  { funcNames ~ "()" }
singleVariableFunc =  { funcNames ~ "(" ~ expression ~ ")" }
expression         =  { expr }
funcNames          = _{ latest }
latest             =  { "latest" }

infixExpression = { firstArg ~ infixFunction ~ lookupValue }
firstArg        = { lookup }
infixFunction   = { ANY{1, 2} }

lookup   = _{ lookupId | lookupName | lookupParam }
lookupId = { "id" }
lookupName = { "name" }
lookupParam = { "parameter:" ~ lookupParamName }
lookupParamName = @{ (ASCII_ALPHANUMERIC | "_" )+ }
lookupValue = { string | boolean | number }

number = @{
    ("-" | "+")?
    ~ ("0" | ASCII_NONZERO_DIGIT ~ ASCII_DIGIT*)
    ~ ("." ~ ASCII_DIGIT*)?
    ~ (^"e" ~ ("+" | "-")? ~ ASCII_DIGIT+)?
}
boolean = { "true" | "TRUE" | "false" | "FALSE" }
string = ${ ("\"" ~ inner_dbl ~ "\"") | ("'" ~ inner_sgl ~ "'") }
// Contents of string including double quotes
inner_dbl = @{ char_dbl* }
inner_sgl = @{ char_sgl* }
// Contents of string without double quotes
char_dbl       =  {
    !("\"" | "\\") ~ ANY // Matches any character except " and \ which are not supported in querying atm
}
char_sgl       =  {
    !("'" | "\\") ~ ANY // Matches any character except ' and \ which are not supported in querying atm
}
WHITESPACE = _{ " " | "\t" | "\r" | "\n" }
